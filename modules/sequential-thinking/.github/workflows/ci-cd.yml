name: Sequential Thinking CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'modules/sequential-thinking/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'modules/sequential-thinking/**'
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
          run_install: false
      
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: Install dependencies
        working-directory: ./modules/sequential-thinking
        run: pnpm install
      
      - name: Build
        working-directory: ./modules/sequential-thinking
        run: pnpm build
      
      - name: Run tests
        working-directory: ./modules/sequential-thinking
        run: pnpm test || true
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sequential-thinking-dist
          path: ./modules/sequential-thinking/dist
  
  docker:
    name: Build and Push Docker Image
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: sequential-thinking-dist
          path: ./modules/sequential-thinking/dist
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/harca-sequential-thinking
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha,format=long
            latest
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./modules/sequential-thinking
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-dev:
    name: Deploy to Development
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
      - name: Deploy to Development Environment
        run: |
          echo "Deploying to development environment..."
          # ここに開発環境へのデプロイスクリプトを追加
          # 例: kubectl apply -f k8s/dev/sequential-thinking.yaml
  
  deploy-prod:
    name: Deploy to Production
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
      - name: Deploy to Production Environment
        run: |
          echo "Deploying to production environment..."
          # ここに本番環境へのデプロイスクリプトを追加
          # 例: kubectl apply -f k8s/prod/sequential-thinking.yaml
